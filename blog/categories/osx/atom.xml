<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OSX | MacOps.io]]></title>
  <link href="http://blog.macops.io/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://blog.macops.io/"/>
  <updated>2013-06-14T14:58:46+02:00</updated>
  <id>http://blog.macops.io/</id>
  <author>
    <name><![CDATA[headmin]]></name>
    <email><![CDATA[admin+blog@macops.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install OS X 10.9 Mavericks VM in ESXi 5 or Fusion 5.0.3]]></title>
    <link href="http://blog.macops.io/ESXi/VMware/OSX/Mavericks/Install/Fusion/2013/06/14/install-os-x-10-dot-9-mavericks-to-a-vm-in-esxi-5-or-vmware-fusion-5-dot-0-3/"/>
    <updated>2013-06-14T10:32:00+02:00</updated>
    <id>http://blog.macops.io/ESXi/VMware/OSX/Mavericks/Install/Fusion/2013/06/14/install-os-x-10-dot-9-mavericks-to-a-vm-in-esxi-5-or-vmware-fusion-5-dot-0-3</id>
    <content type="html"><![CDATA[<p>How to install OS X 10.9 Mavericks to a VM in ESXi 5 or Fusion 5.0.3 ?</p>

<p><strong>DISCLAIMER:</strong> Of course all details in this posting need to be performed on a Mac as your hostmachine. Also this receipe is for scientific and evaluation purpose only!</p>

<p>Now back to the topic installin Mavericks inside ESXi &ndash; It&rsquo;s a little tricky but possible. To get you up and running here are some quick notes on how you’ll manage to successfully install the current OS X 10.9. Mavericks .dmg (available for only for registered Apple Developers) to a VM running inside ESXi 5.x or VMware Fusion 5.0.3.</p>

<p>Reason for the tweacks required is once you&rsquo;ll try installing directly from the official Mavericks install .dmg you&rsquo;ll fail boot up &ndash; but only a little trick is required to modify the install.dmg for our needs. Once you did this  this your image will boot up in ESXi or VMware Fusion and you&rsquo;ll be able to run a OSX migration feature usning OSInstall.mpkg targeting your VM bootvolume for a fresh and shiny OS X 10.9 Mavericks installation erady for evaluation.</p>

<p><strong>the receipe to a Mavericks VM :</strong></p>

<p>Please note in bewlow notes depending on the volumes you&rsquo;ll have present on your machine to create a modified mavericks-esxi.dmg  build this might need to adjust <em>/dev/disk_name</em> for your case</p>

<p><code>
hdiutil convert -format UDRW -o Desktop/mavericks-esxi.dmg /Applications/Install\ OS\ X\ 10.9\ Developer\ Preview.app/Contents/SharedSupport/InstallESD.dmg
</code>
<code>
hdiutil resize -size 9g Desktop/mavericks-esxi.dmg
</code>
<code>
hdiutil attach Desktop/mavericks-esxi.dmg
/dev/disk1            Apple_partition_scheme         
/dev/disk1s1          Apple_partition_map            
/dev/disk1s2          Apple_HFS                      /Volumes/OS X Install ESD
</code>
```
sudo disktool -A disk1s2    ##=> check to use correct <em>/dev/disk_name</em> here</p>

<p>hdiutil mount /Applications/Install\ OS\ X\ 10.9\ Developer\ Preview.app/Contents/SharedSupport/InstallESD.dmg
/dev/disk4            Apple_partition_scheme       <br/>
/dev/disk4s1          Apple_partition_map          <br/>
/dev/disk4s2          Apple_HFS                      /Volumes/OS X Install ESD 1
<code>
</code>
hdiutil attach /Volumes/OS\ X\ Install\ ESD\ 1/BaseSystem.dmg</p>

<p>sudo disktool -A disk4s2    ##=> again check to use correct <em>/dev/disk_name</em> here</p>

<p>sudo ditto /Volumes/OS\ X\ Base\ System/ /Volumes/OS\ X\ Install\ ESD</p>

<p>hdiutil detach /Volumes/OS\ X\ Install\ ESD
```</p>

<p>That modified mavericks-esxi.dmg is now ready to boot up inside VMware hosts</p>

<p><strong>individual steps for for ESXi /vSphere</strong></p>

<pre><code>1.  scp the mavericks-esxi.dmg to your esxi host or use sftp client to transfer it
2.  create a new Virtual Machine
3.  use 'Typical'
4.  choose a name for your Mavericks VM
5.  choose your storage destination
6.  choose guestsystem type: Apple Mac OS X 10.7.(64-Bit)
7.  choose your network (or just leave at default)
8.  choose thin provisioning
9.  finally choose option to edit the configuration
10. set CPU sockets to 2  ## this little tweak might be worth it once you'll try running OS X Server Preview running with CI and Xcode services on the VM ;-) 
11. enable connect on boot for CD/DVD use ISO  ## important step here, otherways VM fails to boot 
12. browse to the place you’ve stored the uploaded mavericks-esxi.dmg
13. use “show all types”
14. select the mavericks-esxi.dmg
</code></pre>

<p><strong>individual steps for VMware Fusion 5.0.x</strong></p>

<pre><code>1.  new Virtual Machine
2.  Continue without disk
3.  choose a disk  or disk image
4.  select the mavericks-esxi.dmg as source
5.  boot the VM
</code></pre>

<p><strong>similar steps for both ESXi and VMware Fusion 5.0</strong></p>

<pre><code>1.  start the VM booting into OS X 10.9
2.  choose language
3.  open diskutility initialize the Disk and use standard name Macintosh HD (or your own)
4.  start terminal from menu
</code></pre>

<p><img src="/images/diskutil_esxi.png" /></p>

<p>last step required is to install the 10.9 system to the volume, for this you&rsquo;ll need to open terminal in the booted VM and run /usr/sbin/installer with -pkg option</p>

<p><code>
installer -pkg /Packages/OSInstall.mpkg -target /Volumes/Macintosh\ HD
</code></p>

<p>now following approx 10min process to install the system-files from OSInstall.mpkg the to your VM boot volume</p>

<p>you&rsquo;ll need to wait til you&rsquo;ll see &ldquo;installer: The install was successful.&rdquo; in terminal</p>

<p><img src="/images/install_mavericks_mpkg.png" /></p>

<p><strong>final steps similar for both ESXi and VMware Fusion 5.0</strong></p>

<pre><code>1.  choose startup disc Macintosh HD OS X, 10.9
2.  reboot
3.  create a user and so forth.... 
</code></pre>

<p>Now go have fun and explore Mavericks OS X 10.9 inside ESXi 5 / Fusion 5</p>

<p>original source for the receipe (anonymous poster): <a href="http://pastebin.com/4kG5ChsP">http://pastebin.com/4kG5ChsP</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[utilities and tools - may edition]]></title>
    <link href="http://blog.macops.io/utilities/OSX/iOS/2013/05/31/utilities-and-tools-may-edition/"/>
    <updated>2013-05-31T20:59:00+02:00</updated>
    <id>http://blog.macops.io/utilities/OSX/iOS/2013/05/31/utilities-and-tools-may-edition</id>
    <content type="html"><![CDATA[<p>A quick collection of interesting tools and projects worth checking out</p>

<hr />

<h3>instashare.app</h3>

<p><a href="http://bit.ly/11tTsqq">http://bit.ly/11tTsqq</a></p>

<p>smart iOS and OSX client to transfer any kind of files between devices, like AirDrop</p>

<p><em>in beta, updated frequently</em></p>

<hr />

<h3>Feedy</h3>

<p><a href="http://bit.ly/12mrHrs">http://bit.ly/12mrHrs</a></p>

<p>nice RSS news reader from Nikolay Krill the guy created CodeRunner</p>

<hr />

<h3>pro</h3>

<p><a href="http://bit.ly/11tUpPz">http://bit.ly/11tUpPz</a></p>

<p>sort of spotlight for git on your local machine by fuzzy searching only git repositories</p>

<p><em>in active development</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using homebrew on OSX in Enterprise Environments]]></title>
    <link href="http://blog.macops.io/homebrew/OSX/Enterprise/MacPorts/curl/2013/05/31/using-homebrew-in-enterprise-environments/"/>
    <updated>2013-05-31T13:37:00+02:00</updated>
    <id>http://blog.macops.io/homebrew/OSX/Enterprise/MacPorts/curl/2013/05/31/using-homebrew-in-enterprise-environments</id>
    <content type="html"><![CDATA[<p>Ever tried to to install software via homebrew while you&rsquo;re in enterprise environment or other networks with a web proxy present?
Glad you have tried, but without knowing in advance you&rsquo;ll might initally run into a problem while installing or updating via homebrew. Obviously that problem should be pretty simple to fix with enabling curl to use the proxy as default.</p>

<p>Here&rsquo;s a short wrap up on how to install/run homewbrew in such proxied environment.</p>

<h2>Prerequisites:</h2>

<p>read homebrew project page <a href="https://github.com/mxcl/homebrew/wiki/Installation">https://github.com/mxcl/homebrew/wiki/Installation</a></p>

<h2>homebrew install instructions behind a proxy:</h2>

<p>open Terminal.app
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;don&amp;rsquo;t sudo here, make sure you&amp;rsquo;re in right user environment you&amp;rsquo;ll want to use homebrew&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; <span class="nb">echo</span> <span class="s2">&quot;proxy=proxy.a_company.local:8080&quot;</span> &amp;gt; ~/.curlrc
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;&amp;ndash;&gt; will create a file containing proxy setting consulted by curl in ~/.curlrc&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;&amp;ndash;&gt; install homebrew with a one liner:&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; brew doctor
</span><span class='line'>
</span><span class='line'> Warning: You have a curlrc file
</span><span class='line'> If you have trouble downloading packages with Homebrew, <span class="k">then </span>maybe this
</span><span class='line'> is the problem? If the following <span class="nb">command </span>doesn<span class="err">&#39;</span>t work, <span class="k">then </span>try removing
</span><span class='line'> your curlrc:
</span><span class='line'>
</span><span class='line'> brew update
</span><span class='line'>
</span><span class='line'> brew install <span class="nv">wget</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> <span class="o">==</span>&amp;gt; Downloading http://ftpmirror.gnu.org/wget/wget-1.14.tar.gz
</span><span class='line'> Already downloaded: /Library/Caches/Homebrew/wget-1.14.tar.gz
</span><span class='line'> <span class="o">==</span>&amp;gt; ./configure --prefix<span class="o">=</span>/usr/local/Cellar/wget/1.14 --sysconfdir<span class="o">=</span>/usr/local/etc --with-ssl<span class="o">=</span>openssl --disable-iri
</span><span class='line'> <span class="o">==</span>&amp;gt; make install
</span><span class='line'> /usr/local/Cellar/wget/1.14: 8 files, 712K, built in 71 seconds
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>base requirements:</p>

<ul>
<li> Xcode4 command line utilities installed</li>
<li> working ruby 1.8.7  or higher environment ( check OSX systems installed in Terminal:  ruby -v)</li>
</ul>

]]></content>
  </entry>
  
</feed>
